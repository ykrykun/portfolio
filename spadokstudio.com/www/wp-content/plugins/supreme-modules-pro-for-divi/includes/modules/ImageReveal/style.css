.dsm-image-reveal-overlay {
    position: absolute;
    transform-origin: right;
}

.dsm-image-reveal {
    position: relative;
    display: block;
}

.dsm-image-wrapper {
    text-align: left;
}

.dsm-image-reveal-overlay {
    background-color: #1fe0ba;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    transform: matrix(0, 0, 0, 1, 0, 0);
    visibility: hidden;
    transform-origin: top;
    z-index: 1;
}

.dsm-image-reveal-text-wrapper {
    position: absolute;
    top: 0;
    left: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    z-index: 1;
    padding: 7px;
}

.dsm_image_reveal.et_pb_text_align_left .dsm-image-reveal-text {
    text-align: left;
}

.dsm_image_reveal.et_pb_text_align_center .dsm-image-reveal-text {
    text-align: center;
}

.dsm_image_reveal.et_pb_text_align_right .dsm-image-reveal-text {
    text-align: right;
}

.dsm_image_reveal.et_pb_text_align_justify .dsm-image-reveal-text {
    text-align: justify;
}

.dsm-image-reveal-text {
    width: 100%;
    visibility: hidden;
}

.dsm_image_reveal {
    line-height: 0;
}

.dsm-image-reveal .et_pb_image_wrap {
    display: inline-block;
    position: relative;
    max-width: 100%;
}

.dsm-image-reveal img {
    position: relative;
}

.dsm_image_reveal .dsm-image-reveal-text .char {
    position: relative;
    visibility: hidden;
    display: inline-block;
    white-space: pre-wrap;
}

.dsm-image-reveal-hover:hover .dsm-image-reveal-text .char {
    visibility: visible;
    animation: fadeInDown 0.2s both;
    animation-delay: calc(30ms * var(--char-index));
}

/* Recommended styles for Splitting */
.splitting .word,
.splitting .char {
    display: inline-block;
}

/* Psuedo-element chars */
.splitting .char {
    position: relative;
}

/**
 * Populate the psuedo elements with the character to allow for expanded effects
 * Set to `display: none` by default; just add `display: block` when you want
 * to use the psuedo elements
 */
.splitting .char::before,
.splitting .char::after {
    content: attr(data-char);
    position: absolute;
    top: 0;
    left: 0;
    visibility: hidden;
    transition: inherit;
    user-select: none;
}

/* Expanded CSS Variables */

.splitting {
    /* The center word index */
    --word-center: calc((var(--word-total) - 1) / 2);

    /* The center character index */
    --char-center: calc((var(--char-total) - 1) / 2);

    /* The center character index */
    --line-center: calc((var(--line-total) - 1) / 2);
}

.splitting .word {
    /* Pecent (0-1) of the word's position */
    --word-percent: calc(var(--word-index) / var(--word-total));

    /* Pecent (0-1) of the line's position */
    --line-percent: calc(var(--line-index) / var(--line-total));
}

.splitting .char {
    /* Percent (0-1) of the char's position */
    --char-percent: calc(var(--char-index) / var(--char-total));

    /* Offset from center, positive & negative */
    --char-offset: calc(var(--char-index) - var(--char-center));

    /* Absolute distance from center, only positive */
    --distance: calc((var(--char-offset) * var(--char-offset)) / var(--char-center));

    /* Distance from center where -1 is the far left, 0 is center, 1 is far right */
    --distance-sine: calc(var(--char-offset) / var(--char-center));

    /* Distance from center where 1 is far left/far right, 0 is center */
    --distance-percent: calc((var(--distance) / var(--char-center)));
}

html.et_fb_preview_active--responsive_preview .dsm-image-reveal.et_always_center_on_mobile .dsm-image-wrapper {
    text-align: center;
}

.dsm-image-reveal.et_always_center_on_mobile .dsm-image-wrapper {
    margin-right: auto !important;
    margin-left: auto !important;
    text-align: center !important;
}